{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { ActionType } from '../constants';\nconst {\n  GET_NEWS_INIT,\n  GET_NEWS_SUCCESS,\n  GET_NEWS_FAILURE\n} = ActionType;\nconst newsDataInitialState = {\n  articles: [],\n  loading: false,\n  loaded: false,\n  error: false,\n  errorData: {}\n};\n\nconst newsDataReducer = (state = newsDataInitialState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case GET_NEWS_INIT:\n      return { ...state,\n        loading: true,\n        loaded: false,\n        error: false,\n        errorData: {}\n      };\n\n    case GET_NEWS_SUCCESS:\n      {\n        const {\n          data\n        } = payload;\n        return { ...state,\n          data,\n          loading: false,\n          loaded: true,\n          error: false,\n          errorData: {}\n        };\n      }\n\n    case GET_NEWS_FAILURE:\n      {\n        return { ...state,\n          loading: false,\n          loaded: false,\n          error: true,\n          errorData: payload\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  newsData: newsDataReducer\n});","map":{"version":3,"sources":["/Users/pecherkiy/Documents/investorsinideas_test/src/redux/reducers/index.js"],"names":["combineReducers","ActionType","GET_NEWS_INIT","GET_NEWS_SUCCESS","GET_NEWS_FAILURE","newsDataInitialState","articles","loading","loaded","error","errorData","newsDataReducer","state","type","payload","data","newsData"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AAEA,SAASC,UAAT,QAA2B,cAA3B;AAEA,MAAM;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA,gBAAjB;AAAmCC,EAAAA;AAAnC,IAAwDH,UAA9D;AAEA,MAAMI,oBAAoB,GAAG;AAC3BC,EAAAA,QAAQ,EAAE,EADiB;AAE3BC,EAAAA,OAAO,EAAE,KAFkB;AAG3BC,EAAAA,MAAM,EAAE,KAHmB;AAI3BC,EAAAA,KAAK,EAAE,KAJoB;AAK3BC,EAAAA,SAAS,EAAE;AALgB,CAA7B;;AAQA,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAGP,oBAAT,EAA+B;AAAEQ,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAA/B,KAAqD;AAC3E,UAAQD,IAAR;AACE,SAAKX,aAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELL,QAAAA,OAAO,EAAE,IAFJ;AAGLC,QAAAA,MAAM,EAAE,KAHH;AAILC,QAAAA,KAAK,EAAE,KAJF;AAKLC,QAAAA,SAAS,EAAE;AALN,OAAP;;AAOF,SAAKP,gBAAL;AAAuB;AACrB,cAAM;AAAEY,UAAAA;AAAF,YAAWD,OAAjB;AACA,eAAO,EACL,GAAGF,KADE;AAELG,UAAAA,IAFK;AAGLR,UAAAA,OAAO,EAAE,KAHJ;AAILC,UAAAA,MAAM,EAAE,IAJH;AAKLC,UAAAA,KAAK,EAAE,KALF;AAMLC,UAAAA,SAAS,EAAE;AANN,SAAP;AAQD;;AACD,SAAKN,gBAAL;AAAuB;AACrB,eAAO,EACL,GAAGQ,KADE;AAELL,UAAAA,OAAO,EAAE,KAFJ;AAGLC,UAAAA,MAAM,EAAE,KAHH;AAILC,UAAAA,KAAK,EAAE,IAJF;AAKLC,UAAAA,SAAS,EAAEI;AALN,SAAP;AAOD;;AACD;AACE,aAAOF,KAAP;AA9BJ;AAgCD,CAjCD;;AAmCA,eAAeZ,eAAe,CAAC;AAC7BgB,EAAAA,QAAQ,EAAEL;AADmB,CAAD,CAA9B","sourcesContent":["import { combineReducers } from 'redux';\n\nimport { ActionType } from '../constants';\n\nconst { GET_NEWS_INIT, GET_NEWS_SUCCESS, GET_NEWS_FAILURE } = ActionType;\n\nconst newsDataInitialState = {\n  articles: [],\n  loading: false,\n  loaded: false,\n  error: false,\n  errorData: {},\n};\n\nconst newsDataReducer = (state = newsDataInitialState, { type, payload }) => {\n  switch (type) {\n    case GET_NEWS_INIT:\n      return {\n        ...state,\n        loading: true,\n        loaded: false,\n        error: false,\n        errorData: {},\n      };\n    case GET_NEWS_SUCCESS: {\n      const { data } = payload;\n      return {\n        ...state,\n        data,\n        loading: false,\n        loaded: true,\n        error: false,\n        errorData: {},\n      };\n    }\n    case GET_NEWS_FAILURE: {\n      return {\n        ...state,\n        loading: false,\n        loaded: false,\n        error: true,\n        errorData: payload,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  newsData: newsDataReducer,\n});\n"]},"metadata":{},"sourceType":"module"}