{"ast":null,"code":"import { getUsersApi, getCurrentUserApi } from '../api';\nimport { ActionType } from '../constants/usersConstants';\nconst {\n  GET_USERS_INIT,\n  GET_USERS_SUCCESS,\n  GET_USERS_FAILURE,\n  CLEAR_STORE,\n  SET_PAGE,\n  GET_CURRENT_USER_INIT,\n  GET_CURRENT_USER_SUCCESS,\n  GET_CURRENT_USER_FAILURE\n} = ActionType;\nexport const getPosts = requestParams => dispatch => {\n  dispatch({\n    type: GET_USERS_INIT\n  });\n  getUsersApi(requestParams).then(response => {\n    dispatch({\n      type: GET_USERS_SUCCESS,\n      payload: { ...response\n      }\n    });\n  }).catch(error => {\n    dispatch({\n      type: GET_USERS_FAILURE,\n      payload: { ...error\n      }\n    });\n  });\n};\nexport const getCurrentUser = login => dispatch => {\n  dispatch({\n    type: GET_CURRENT_USER_INIT\n  });\n  getCurrentUserApi(login).then(response => {\n    dispatch({\n      type: GET_CURRENT_USER_SUCCESS,\n      payload: { ...response\n      }\n    });\n  }).catch(error => {\n    dispatch({\n      type: GET_CURRENT_USER_FAILURE,\n      payload: { ...error\n      }\n    });\n  });\n};\nexport const clearStore = () => ({\n  type: CLEAR_STORE\n});\nexport const setPage = value => ({\n  type: SET_PAGE,\n  payload: value\n});","map":{"version":3,"sources":["/Users/pecherkiy/Documents/investorsinideas_test/src/redux/actions/usersActions.js"],"names":["getUsersApi","getCurrentUserApi","ActionType","GET_USERS_INIT","GET_USERS_SUCCESS","GET_USERS_FAILURE","CLEAR_STORE","SET_PAGE","GET_CURRENT_USER_INIT","GET_CURRENT_USER_SUCCESS","GET_CURRENT_USER_FAILURE","getPosts","requestParams","dispatch","type","then","response","payload","catch","error","getCurrentUser","login","clearStore","setPage","value"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,iBAAtB,QAA+C,QAA/C;AACA,SAASC,UAAT,QAA2B,6BAA3B;AAEA,MAAM;AACJC,EAAAA,cADI;AAEJC,EAAAA,iBAFI;AAGJC,EAAAA,iBAHI;AAIJC,EAAAA,WAJI;AAKJC,EAAAA,QALI;AAMJC,EAAAA,qBANI;AAOJC,EAAAA,wBAPI;AAQJC,EAAAA;AARI,IASFR,UATJ;AAWA,OAAO,MAAMS,QAAQ,GAAIC,aAAD,IAAoBC,QAAD,IAAc;AACvDA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEX;AADC,GAAD,CAAR;AAGAH,EAAAA,WAAW,CAACY,aAAD,CAAX,CACGG,IADH,CACSC,QAAD,IAAc;AAClBH,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEV,iBADC;AAEPa,MAAAA,OAAO,EAAE,EAAE,GAAGD;AAAL;AAFF,KAAD,CAAR;AAID,GANH,EAOGE,KAPH,CAOUC,KAAD,IAAW;AAChBN,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAET,iBADC;AAEPY,MAAAA,OAAO,EAAE,EAAE,GAAGE;AAAL;AAFF,KAAD,CAAR;AAID,GAZH;AAaD,CAjBM;AAmBP,OAAO,MAAMC,cAAc,GAAIC,KAAD,IAAYR,QAAD,IAAc;AACrDA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEN;AADC,GAAD,CAAR;AAGAP,EAAAA,iBAAiB,CAACoB,KAAD,CAAjB,CACGN,IADH,CACSC,QAAD,IAAc;AAClBH,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEL,wBADC;AAEPQ,MAAAA,OAAO,EAAE,EAAE,GAAGD;AAAL;AAFF,KAAD,CAAR;AAID,GANH,EAOGE,KAPH,CAOUC,KAAD,IAAW;AAChBN,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEJ,wBADC;AAEPO,MAAAA,OAAO,EAAE,EAAE,GAAGE;AAAL;AAFF,KAAD,CAAR;AAID,GAZH;AAaD,CAjBM;AAmBP,OAAO,MAAMG,UAAU,GAAG,OAAO;AAC/BR,EAAAA,IAAI,EAAER;AADyB,CAAP,CAAnB;AAIP,OAAO,MAAMiB,OAAO,GAAIC,KAAD,KAAY;AACjCV,EAAAA,IAAI,EAAEP,QAD2B;AAEjCU,EAAAA,OAAO,EAAEO;AAFwB,CAAZ,CAAhB","sourcesContent":["import { getUsersApi, getCurrentUserApi } from '../api';\nimport { ActionType } from '../constants/usersConstants';\n\nconst {\n  GET_USERS_INIT,\n  GET_USERS_SUCCESS,\n  GET_USERS_FAILURE,\n  CLEAR_STORE,\n  SET_PAGE,\n  GET_CURRENT_USER_INIT,\n  GET_CURRENT_USER_SUCCESS,\n  GET_CURRENT_USER_FAILURE,\n} = ActionType;\n\nexport const getPosts = (requestParams) => (dispatch) => {\n  dispatch({\n    type: GET_USERS_INIT,\n  });\n  getUsersApi(requestParams)\n    .then((response) => {\n      dispatch({\n        type: GET_USERS_SUCCESS,\n        payload: { ...response },\n      });\n    })\n    .catch((error) => {\n      dispatch({\n        type: GET_USERS_FAILURE,\n        payload: { ...error },\n      });\n    });\n};\n\nexport const getCurrentUser = (login) => (dispatch) => {\n  dispatch({\n    type: GET_CURRENT_USER_INIT,\n  });\n  getCurrentUserApi(login)\n    .then((response) => {\n      dispatch({\n        type: GET_CURRENT_USER_SUCCESS,\n        payload: { ...response },\n      });\n    })\n    .catch((error) => {\n      dispatch({\n        type: GET_CURRENT_USER_FAILURE,\n        payload: { ...error },\n      });\n    });\n};\n\nexport const clearStore = () => ({\n  type: CLEAR_STORE,\n});\n\nexport const setPage = (value) => ({\n  type: SET_PAGE,\n  payload: value,\n});\n"]},"metadata":{},"sourceType":"module"}