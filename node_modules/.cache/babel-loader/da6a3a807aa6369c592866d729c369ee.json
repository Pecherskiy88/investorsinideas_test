{"ast":null,"code":"var _jsxFileName = \"/Users/pecherkiy/Documents/investorsinideas_test/src/pages/NewsPage/index.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getPosts, setPage, clearStore } from '../../redux/actions/usersActions';\nimport { userDataSelector } from '../../redux/selectors/usersSelectors';\nimport UsersList from '../../components/UsersList';\nimport Pagination from '../../atoms/Pagination';\nimport Spinner from '../../assets/icons/spinner';\nimport s from '../style.module.css';\n\nconst MainPage = () => {\n  const dispatch = useDispatch();\n  const usersData = useSelector(state => userDataSelector(state));\n  const {\n    data,\n    loading,\n    currentPage\n  } = usersData; // Имитирую пагинацию, так как для users в api gitHub пагинация предусмотрена только для next через params since.\n\n  const currentData = data.length > 0 ? data.slice((currentPage - 1) * 10, currentPage * 10) : data;\n  useEffect(() => {\n    dispatch(clearStore());\n    dispatch(getPosts());\n  }, [dispatch]);\n\n  const handlePageChange = (event, value) => {\n    dispatch(setPage(value));\n  };\n\n  const renderSpinner = loading ? /*#__PURE__*/React.createElement(Spinner, {\n    fill: \"#000\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 35\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: s.wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(UsersList, {\n    data: currentData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.paginationBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Pagination, {\n    onChange: handlePageChange,\n    page: currentPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  })), renderSpinner);\n};\n\nexport default MainPage;","map":{"version":3,"sources":["/Users/pecherkiy/Documents/investorsinideas_test/src/pages/NewsPage/index.js"],"names":["React","useEffect","useDispatch","useSelector","getPosts","setPage","clearStore","userDataSelector","UsersList","Pagination","Spinner","s","MainPage","dispatch","usersData","state","data","loading","currentPage","currentData","length","slice","handlePageChange","event","value","renderSpinner","wrapper","paginationBlock"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SACEC,QADF,EAEEC,OAFF,EAGEC,UAHF,QAIO,kCAJP;AAKA,SAASC,gBAAT,QAAiC,sCAAjC;AAEA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AAEA,OAAOC,OAAP,MAAoB,4BAApB;AAEA,OAAOC,CAAP,MAAc,qBAAd;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAMY,SAAS,GAAGX,WAAW,CAAEY,KAAD,IAAWR,gBAAgB,CAACQ,KAAD,CAA5B,CAA7B;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAAiCJ,SAAvC,CAHqB,CAKrB;;AACA,QAAMK,WAAW,GACfH,IAAI,CAACI,MAAL,GAAc,CAAd,GACIJ,IAAI,CAACK,KAAL,CAAW,CAACH,WAAW,GAAG,CAAf,IAAoB,EAA/B,EAAmCA,WAAW,GAAG,EAAjD,CADJ,GAEIF,IAHN;AAKAf,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,QAAQ,CAACP,UAAU,EAAX,CAAR;AACAO,IAAAA,QAAQ,CAACT,QAAQ,EAAT,CAAR;AACD,GAHQ,EAGN,CAACS,QAAD,CAHM,CAAT;;AAKA,QAAMS,gBAAgB,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACzCX,IAAAA,QAAQ,CAACR,OAAO,CAACmB,KAAD,CAAR,CAAR;AACD,GAFD;;AAIA,QAAMC,aAAa,GAAGR,OAAO,gBAAG,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAA6B,IAA1D;AAEA,sBACE,uDACE;AAAK,IAAA,SAAS,EAAEN,CAAC,CAACe,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAEP,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE;AAAK,IAAA,SAAS,EAAER,CAAC,CAACgB,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,QAAQ,EAAEL,gBAAtB;AAAwC,IAAA,IAAI,EAAEJ,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,EAOGO,aAPH,CADF;AAWD,CAjCD;;AAmCA,eAAeb,QAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  getPosts,\n  setPage,\n  clearStore,\n} from '../../redux/actions/usersActions';\nimport { userDataSelector } from '../../redux/selectors/usersSelectors';\n\nimport UsersList from '../../components/UsersList';\nimport Pagination from '../../atoms/Pagination';\n\nimport Spinner from '../../assets/icons/spinner';\n\nimport s from '../style.module.css';\n\nconst MainPage = () => {\n  const dispatch = useDispatch();\n  const usersData = useSelector((state) => userDataSelector(state));\n  const { data, loading, currentPage } = usersData;\n\n  // Имитирую пагинацию, так как для users в api gitHub пагинация предусмотрена только для next через params since.\n  const currentData =\n    data.length > 0\n      ? data.slice((currentPage - 1) * 10, currentPage * 10)\n      : data;\n\n  useEffect(() => {\n    dispatch(clearStore());\n    dispatch(getPosts());\n  }, [dispatch]);\n\n  const handlePageChange = (event, value) => {\n    dispatch(setPage(value));\n  };\n\n  const renderSpinner = loading ? <Spinner fill=\"#000\" /> : null;\n\n  return (\n    <>\n      <div className={s.wrapper}>\n        <UsersList data={currentData} />\n      </div>\n      <div className={s.paginationBlock}>\n        <Pagination onChange={handlePageChange} page={currentPage} />\n      </div>\n      {renderSpinner}\n    </>\n  );\n};\n\nexport default MainPage;\n"]},"metadata":{},"sourceType":"module"}