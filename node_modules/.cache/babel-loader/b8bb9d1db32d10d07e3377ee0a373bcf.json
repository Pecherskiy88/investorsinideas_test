{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { ActionType } from '../constants/usersConstants';\nconst {\n  GET_USERS_INIT,\n  GET_USERS_SUCCESS,\n  GET_USERS_FAILURE,\n  CLEAR_STORE,\n  SET_PAGE,\n  GET_CURRENT_USER_INIT,\n  GET_CURRENT_USER_SUCCESS,\n  GET_CURRENT_USER_FAILURE\n} = ActionType;\nconst usersDataInitialState = {\n  data: [],\n  currentPage: 1,\n  loading: false,\n  loaded: false,\n  error: false,\n  errorData: {}\n};\n\nconst usersDataReducer = (state = usersDataInitialState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case GET_USERS_INIT:\n      return { ...state,\n        loading: true,\n        loaded: false,\n        error: false,\n        errorData: {}\n      };\n\n    case GET_USERS_SUCCESS:\n      {\n        const {\n          data\n        } = payload;\n        return { ...state,\n          data,\n          loading: false,\n          loaded: true,\n          error: false,\n          errorData: {}\n        };\n      }\n\n    case GET_USERS_FAILURE:\n      {\n        return { ...state,\n          loading: false,\n          loaded: false,\n          error: true,\n          errorData: payload\n        };\n      }\n\n    case SET_PAGE:\n      {\n        return { ...state,\n          currentPage: payload\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nconst currentUserInitialState = {\n  data: {\n    login: '',\n    id: null,\n    avatar_url: '',\n    html_url: '',\n    followers_url: '',\n    subscriptions_url: '',\n    organizations_url: '',\n    repos_url: '',\n    name: '',\n    company: null,\n    blog: '',\n    location: '',\n    email: null,\n    hireable: null,\n    bio: null,\n    twitter_username: null,\n    public_repos: 0,\n    public_gists: 0,\n    followers: 0,\n    following: 0,\n    created_at: '',\n    updated_at: ''\n  },\n  loading: false,\n  loaded: false,\n  error: false,\n  errorData: {}\n};\n\nconst currentUserReducer = (state = currentUserInitialState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case GET_CURRENT_USER_INIT:\n      return { ...state,\n        loading: true,\n        loaded: false,\n        error: false,\n        errorData: {}\n      };\n\n    case GET_CURRENT_USER_SUCCESS:\n      {\n        const {\n          data\n        } = payload;\n        return { ...state,\n          data,\n          loading: false,\n          loaded: true,\n          error: false,\n          errorData: {}\n        };\n      }\n\n    case GET_CURRENT_USER_FAILURE:\n      {\n        return { ...state,\n          loading: false,\n          loaded: false,\n          error: true,\n          errorData: payload\n        };\n      }\n\n    case CLEAR_STORE:\n      return { ...currentUserInitialState\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  usersData: usersDataReducer,\n  currentUser: currentUserReducer\n});","map":{"version":3,"sources":["/Users/pecherkiy/Documents/investorsinideas_test/src/redux/reducers/usersReducer.js"],"names":["combineReducers","ActionType","GET_USERS_INIT","GET_USERS_SUCCESS","GET_USERS_FAILURE","CLEAR_STORE","SET_PAGE","GET_CURRENT_USER_INIT","GET_CURRENT_USER_SUCCESS","GET_CURRENT_USER_FAILURE","usersDataInitialState","data","currentPage","loading","loaded","error","errorData","usersDataReducer","state","type","payload","currentUserInitialState","login","id","avatar_url","html_url","followers_url","subscriptions_url","organizations_url","repos_url","name","company","blog","location","email","hireable","bio","twitter_username","public_repos","public_gists","followers","following","created_at","updated_at","currentUserReducer","usersData","currentUser"],"mappings":"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","sourcesContent":["import { combineReducers } from 'redux';\n\nimport { ActionType } from '../constants/usersConstants';\n\nconst {\n  GET_USERS_INIT,\n  GET_USERS_SUCCESS,\n  GET_USERS_FAILURE,\n  CLEAR_STORE,\n  SET_PAGE,\n  GET_CURRENT_USER_INIT,\n  GET_CURRENT_USER_SUCCESS,\n  GET_CURRENT_USER_FAILURE,\n} = ActionType;\n\nconst usersDataInitialState = {\n  data: [],\n  currentPage: 1,\n  loading: false,\n  loaded: false,\n  error: false,\n  errorData: {},\n};\n\nconst usersDataReducer = (state = usersDataInitialState, { type, payload }) => {\n  switch (type) {\n    case GET_USERS_INIT:\n      return {\n        ...state,\n        loading: true,\n        loaded: false,\n        error: false,\n        errorData: {},\n      };\n    case GET_USERS_SUCCESS: {\n      const { data } = payload;\n      return {\n        ...state,\n        data,\n        loading: false,\n        loaded: true,\n        error: false,\n        errorData: {},\n      };\n    }\n    case GET_USERS_FAILURE: {\n      return {\n        ...state,\n        loading: false,\n        loaded: false,\n        error: true,\n        errorData: payload,\n      };\n    }\n    case SET_PAGE: {\n      return { ...state, currentPage: payload };\n    }\n    default:\n      return state;\n  }\n};\n\nconst currentUserInitialState = {\n  data: {\n    login: '',\n    id: null,\n    avatar_url: '',\n    html_url: '',\n    followers_url: '',\n    subscriptions_url: '',\n    organizations_url: '',\n    repos_url: '',\n    name: '',\n    company: null,\n    blog: '',\n    location: '',\n    email: null,\n    hireable: null,\n    bio: null,\n    twitter_username: null,\n    public_repos: 0,\n    public_gists: 0,\n    followers: 0,\n    following: 0,\n    created_at: '',\n    updated_at: '',\n  },\n  loading: false,\n  loaded: false,\n  error: false,\n  errorData: {},\n};\n\nconst currentUserReducer = (\n  state = currentUserInitialState,\n  { type, payload },\n) => {\n  switch (type) {\n    case GET_CURRENT_USER_INIT:\n      return {\n        ...state,\n        loading: true,\n        loaded: false,\n        error: false,\n        errorData: {},\n      };\n    case GET_CURRENT_USER_SUCCESS: {\n      const { data } = payload;\n      return {\n        ...state,\n        data,\n        loading: false,\n        loaded: true,\n        error: false,\n        errorData: {},\n      };\n    }\n    case GET_CURRENT_USER_FAILURE: {\n      return {\n        ...state,\n        loading: false,\n        loaded: false,\n        error: true,\n        errorData: payload,\n      };\n    }\n    case CLEAR_STORE:\n      return { ...currentUserInitialState };\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  usersData: usersDataReducer,\n  currentUser: currentUserReducer,\n});\n"]},"metadata":{},"sourceType":"module"}